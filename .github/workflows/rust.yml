name: Rust with Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Build Rust Application
      run: cargo build --release

    - name: Run Rust Tests
      run: cargo test --verbose

    - name: Build Docker Image
      run: docker build -t my_rust_app .

    - name: Run Docker Container
      run: docker run --rm -d -p 3000:3000 --name rust_container my_rust_app

    - name: Wait for Application to Start
      run: |
        for i in {1..20}; do
          if curl --silent --fail http://localhost:3000/health; then
            echo "Server is up!"
            exit 0
          fi
          echo "Waiting for server..."
          sleep 2
        done
        echo "Server did not start in time"
        exit 1

    - name: Test API Endpoints
      run: |
        sleep 20  # Wait for the server to start
        curl -X POST "http://localhost:3000/user" -H "Content-Type: application/json" -d '{"id":1, "name":"Alice", "email":"alice@example.com"}'
        curl -X GET "http://localhost:3000/user/1"

    - name: Stop Container
      run: docker stop rust_container